{"version":3,"sources":["components/Footer/Footer.js","components/Documents/Dokument1.js","components/Documents/Dokument2.js","components/Nav/Nav.js","components/CollapsibleItems/CollapsibleItem.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","style","display","width","justifyContent","height","alignItems","padding","mesecGodina","marginBottom","ids","Dokument1","id","type","name","maxLength","onChange","e","saveText","target","value","className","margin","this","imePrezimeOdgovornogProjektanta","brojLicenceOdgovornogProjektanta","text1","marginTop","onClick","print","Component","Dokument2","brojDokumenta","nazivInvestitora","lokacijaInvestitoraUlica","lokacijaInvestitoraBroj","lokacijaInvestitoraGrad","text2","Nav","brand","href","centerLogo","CollapsibleItemComponent","content","variables","map","element","i","charAt","toUpperCase","slice","match","join","states","key","onSelect","expanded","header","icon","node","App","state","cols","rows","errorMessage","vrstaDokumenta","datumDokumentaGodina","datumDokumentaMesec","datumDokumentaDan","naziv0bjekta","spratnost0bjekta","lokacija0bjektaUlica","lokacijaObjektaBroj","lokacijaObjektaGrad","katastarskaParcela","katastarskaOpština","tipObjekta","kategorijaObjekta","klasifikacijonaOznakaObjekta","kpPriklucakInfrastruktura","kpPriklucakSaobracajnica","priklucakInfrastrukturaVik","priklucakInfrastrukturaElektro","priklucakInfrastrukturaGrejanje","priklucakInfrastrukturaSaobraćajnice","nazivPlana","nazivProjektanta","odgovornoLiceProjektanta","lokacijaProjektantaBroj","lokacijaProjektantaGrad","titulaOdgovornogProjektanta","fileHandler","event","fileObj","files","ExcelRenderer","err","resp","newRows","forEach","row","index","push","gender","length","setState","SkrollD","window","scroll","top","behavior","Prikazi","item","string","split","toLowerCase","formatString","month","date","Date","getMonth","getFullYear","minWidth","bind","accordion","CollapsibleItem","nazivObjekta","backgroundColor","to","path","render","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c528507f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div style={{display:'flex', width:'500px', justifyContent:'space-between', height: '100px', alignItems: 'flex-end', padding: '0 10px 0 25px'}}>\r\n            <div>\r\n                <p>U Temerinu</p>\r\n                <p>{props.mesecGodina}</p>\r\n            </div>\r\n            <div style={{ width:'150px', }}>\r\n                <p style={{marginBottom:'40px'}}>Za STUPARING:</p>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Printer, { print } from 'react-pdf-print';\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst ids = ['1']\r\nclass Dokument1 extends Component {\r\n  \r\n      render(props) {\r\n        return (\r\n          <div id='d1'>\r\n            <p>Dodaj text: </p>\r\n            <input type='text' name='text1' maxLength='386' onChange={(e)=>this.props.saveText(e.target.name,e.target.value)}/>\r\n            <Printer >\r\n              <div id={ids[0]} style={{ width:'210mm', height: '297mm' }}>\r\n                <div style={{ padding:'5px 20px', width:'550px', height: '700px'}}>\r\n                    <h6 className='center' style={{margin:'40px'}}>REŠENJE O IMENOVANJU VRŠIOCA TEHNIČKE KONTROLE</h6>\r\n\r\n                    <p>Naosnovu člana 129. Zakonao planiranju i izgradnji (Sl. glasnik R.Srbije72/ 09, 81/09-\r\n                    ispravka, 64/10-odluka US, 24/11 i 121/12, 42/13-odlukaUS, 50/2013-odluka US, 98/2013-\r\n                    osluka US, 132/14, 145/14) i odredbi Pravilnika o sadržini, načinu i postupku izrade i način\r\n                    vršenjakontrole tehničke dokumentacije prema klasi i nameni objekta (Sl. list R.Srbije,\r\n                    23/2015) i uslova u pogledu stručne spremei radnog iskustvaradnikana izradi i kontroli\r\n                    tehničke dokumentacije, donosi sesledeće:</p>\r\n\r\n                    <h6>VRŠIOC TEHNIČKE KONTROLE</h6>\r\n                    <p>ZA IDEJNI PROJEKAT:\r\n                    REKONSTRUKCIJA CRPNE STANICE U RUSKOM SELU SA UGRADNJOM POSTROJENJA ZA\r\n                    KONDICIONIRANJE PIJAĆE VODE, čiji je investitor \"JPKIKINDA\" JAVNOPREDUZEĆEZA\r\n                    KOMUNALNU INFRASTRUKTURU I USLUGEIĐOŠKI PUT 4,KIKINDA\r\n                    određuje se:</p>\r\n                    <p><b>{this.props.imePrezimeOdgovornogProjektanta}</b>, br. licence: <b>{this.props.brojLicenceOdgovornogProjektanta}</b>\r\n                    , za projekat električnih instalacija (sveska 4)\r\n                    Tehnička kontrola mora biti urađena u svemu prema važećim standardima i propisima za\r\n                    odgovarajuću oblast, anaročito u skladu sa odredbama Zakona o planiranju i izgradnji (Sl.\r\n                    glasnik R.Srbije72/ 09, 81/2009, 64/2010, 24/2011, 121/2012, 42/2013, 50/2013, 98/2013,\r\n                    132/2014 i 145/ 2014).</p>\r\n                    <p >{this.props.text1}</p>\r\n                </div>\r\n                <Footer mesecGodina={this.props.mesecGodina}/>\r\n              </div>\r\n            </Printer>\r\n            <div style={{display: 'flex', justifyContent: 'center', width: '500px', marginTop: '-270px'}}>\r\n                  <div className = \"btn waves-effect waves-light green darken-4\" onClick={() => print(ids)} style={{width:\"200px\"}}>\r\n                      Štampaj\r\n                  </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  Dokument1;","import React, { Component } from 'react';\r\nimport Printer, { print } from 'react-pdf-print';\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst ids = ['2']\r\nclass Dokument2 extends Component {\r\n  \r\n      render(props) {\r\n        return (\r\n            <div>\r\n                <div style={{padding: '10px'}}>\r\n                <p>Unesi zatečeno stanje: </p>\r\n                <input type='text' name='text2' onChange={(e)=>this.props.saveText(e.target.name,e.target.value)}/>\r\n            </div>\r\n            \r\n            <Printer >\r\n                <div id={ids[0]} style={{ width:'210mm', height: '297mm' }}>\r\n                    <div style={{ padding:'5px 20px', width:'550px', height: '700px'}}>\r\n                        <h6 className='center' style={{margin:'40px'}}>IZVEŠTAJ O ZATEČENOM STANJU OBJEKTA</h6>\r\n                        <p>Odgovorni projektant: <b> {this.props.imePrezimeOdgovornogProjektanta}</b> </p>\r\n                        <p>Broj licence: <b> {this.props.brojLicenceOdgovornogProjektanta}</b></p>\r\n                        <p>Broj elaborata: <b> {this.props.brojDokumenta}</b></p>\r\n                        <p>Naziv investitora: <b> {this.props.nazivInvestitora}</b></p>\r\n                        <p>Lokacija: <b> {this.props.lokacijaInvestitoraUlica} {this.props.lokacijaInvestitoraBroj}, {this.props.lokacijaInvestitoraGrad}</b></p>\r\n                        <p>Zatečeno stanje:</p>\r\n                        <p><b>{this.props.text2}</b></p>\r\n                    </div>\r\n                    <Footer mesecGodina={this.props.mesecGodina}/>\r\n                </div>\r\n            </Printer>\r\n            <div style={{display: 'flex', justifyContent: 'center', width: '500px', marginTop: '-270px'}}>\r\n                <div className = \"btn waves-effect waves-light green darken-4\" onClick={() => print(ids)} style={{width:\"200px\"}}>\r\n                    Štampaj\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  Dokument2;","import React from 'react';\r\nimport { Navbar} from 'react-materialize';\r\n\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <Navbar\r\n            className='grey darken-4 '\r\n            brand={<a className=\"brand-logo blue-grey-text text-lighten-4\"\r\n                    href=\"/\">W-ING SOLUTIONS</a>}\r\n                    centerLogo>\r\n        </Navbar>\r\n    )\r\n\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { CollapsibleItem } from 'react-materialize';\r\n\r\n\r\nconst CollapsibleItemComponent = (props) => {\r\n    \r\n    let content = props.variables.map((element,i) => {\r\n        const valueName = props.variables[i].charAt(0).toUpperCase() + props.variables[i].slice(1)\r\n        let name = valueName.match(/[A-Z][a-z]+/g).join('  ');\r\n        let value = props.states[props.variables[i]]\r\n        return (\r\n            <p key={i}>{name + \":\"} <span>{value}</span></p>\r\n        )\r\n    })\r\n    return (\r\n        <CollapsibleItem\r\n            onSelect={()=>{}}\r\n            expanded={false}\r\n            header={props.header?props.header:''}\r\n            icon={props.icon}\r\n            node=\"div\"\r\n        >\r\n                {content}\r\n         </CollapsibleItem>\r\n    )\r\n}\r\n\r\nexport default CollapsibleItemComponent;","import React, { Component } from 'react';\nimport './App.css';\nimport { ExcelRenderer} from 'react-excel-renderer';\nimport { Link, Route } from 'react-router-dom';\nimport Document1 from './components/Documents/Dokument1';\nimport Document2 from './components/Documents/Dokument2';\nimport 'materialize-css'; // It installs the JS asset only\nimport 'materialize-css/dist/css/materialize.min.css';\nimport { Icon, Collapsible } from 'react-materialize';\nimport Nav from './components/Nav/Nav';\nimport CollapsibleItemComponent from './components/CollapsibleItems/CollapsibleItem'\n\nclass App extends Component {\n    state={\n        cols:[],\n        rows:[],\n        errorMessage:'',\n        mesecGodina: '',\n\n        //Dokument\n        brojDokumenta:'',\n        vrstaDokumenta:'',\n        datumDokumentaGodina:'',\n        datumDokumentaMesec:'',\n        datumDokumentaDan:'',\n\n        //Objekat\n        naziv0bjekta:'',\n        spratnost0bjekta:'',\n        lokacija0bjektaUlica:'',\n        lokacijaObjektaBroj:'',\n        lokacijaObjektaGrad:'',\n        katastarskaParcela:'',\n        katastarskaOpština:'',\n        tipObjekta:'',\n        kategorijaObjekta:'',\n        klasifikacijonaOznakaObjekta:'',\n\n        //Priključci\n        kpPriklucakInfrastruktura:'',\n        kpPriklucakSaobracajnica:'',\n        priklucakInfrastrukturaVik:'',\n        priklucakInfrastrukturaElektro:'',\n        priklucakInfrastrukturaGrejanje:'',\n        priklucakInfrastrukturaSaobraćajnice:'',\n      \n        //Urbanistički plan\n        nazivPlana:'',\n\n        //Investitor\n        nazivInvestitora:'',\n        lokacijaInvestitoraUlica:'',\n        lokacijaInvestitoraBroj:'',\n        lokacijaInvestitoraGrad:'',\n\n        //Projektant\n        nazivProjektanta: '',\n        odgovornoLiceProjektanta: '',\n        lokacijaProjektantaBroj: '',\n        lokacijaProjektantaGrad: '',\n\n        //Odgovorni projektant\n        imePrezimeOdgovornogProjektanta: '',\n        titulaOdgovornogProjektanta: '',\n        brojLicenceOdgovornogProjektanta: '',\n\n        text1: '',\n        text2: ''\n    }    \n    componentDidMount () {\n      var month = [];\n        month[0] = \"Januar\";\n        month[1] = \"Februar\";\n        month[2] = \"Mart\";\n        month[3] = \"April\";\n        month[4] = \"Maj\";\n        month[5] = \"Jun\";\n        month[6] = \"Jul\";\n        month[7] = \"August\";\n        month[8] = \"Septembar\";\n        month[9] = \"Ocktobar\";\n        month[10] = \"Novembar\";\n        month[11] = \"Decembar\";\n      let date = new Date();\n      let mounth = month[date.getMonth()];\n      let year = date.getFullYear()\n      let mesecGodina = mounth + ' ' + year + '.godine';\n      this.setState({\n        mesecGodina: mesecGodina\n      })\n    }\n    fileHandler = (event) => {\n     // console.log(event.target.files[0]);\n        let fileObj = event.target.files[0];\n    \n        //just pass the fileObj as parameter\n        ExcelRenderer(fileObj, (err, resp) => {\n            if (err) {\n                //console.log(err)\n              } else {\n                  //console.log(resp.rows)\n                let newRows = []\n                resp.rows.slice(1).forEach((row, index) => {\n                  if (row && row !== \"undefined\") {\n\n                    newRows.push({\n                      key: index,\n                      name: row[0],\n                      value: row[1],\n                      gender: row[2],\n                    })\n                  }\n                })\n                if (newRows.length === 0) {\n                  this.setState({\n                    errorMessage: \"No data found in file!\",\n                  })\n                  return false\n                } else {\n                  this.setState({\n                    cols: resp.cols,\n                    rows: newRows,\n                    errorMessage: null,\n                  })\n                }\n              }\n        });               \n    \n      };\n      SkrollD = () => {\n        window.scroll({\n          top: 600,\n          behavior: 'smooth'\n        });\n      }\n      Prikazi=()=>{\n        window.scroll({\n          top: 100,\n          behavior: 'smooth'\n        });\n        this.state.rows.forEach(item=>{\n          //Dokument\n            if(item.name){\n              let string = item.name.split('_').map(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join('')\n              let formatString = string.charAt(0).toLowerCase()+string.slice(1)\n              //console.log(formatString)\n              this.setState({\n                [formatString]:item.value\n              })\n            }\n        })\n      }\n      saveText=(name, value)=>{\n        this.setState({\n          [name]:value\n        })\n      }\n      render() {\n        return (\n          <div style={{minWidth: '500px'}}>\n           <Nav/>\n            <div >\n               <div className = \"file-field input-field\" >\n                  <div className = \"btn waves-effect waves-light red darken-4\" >\n                     <span>Izaberi fajl</span>\n                     <input type=\"file\" onChange={this.fileHandler.bind(this)} />\n                  </div>\n                  <div className = \"file-path-wrapper\">\n                     <input className = \"file-path validate file-input-style \" type = \"text\" />\n                  </div>\n               </div>\n            </div >\n            <div  >\n                 <div className = \"btn waves-effect waves-light red darken-4\" onClick={this.Prikazi} >\n                     Prikaži podatke iz izabranog fajla\n                  </div>\n            </div>\n            <div style={{marginTop: '30px'}}>\n            <Collapsible accordion>\n              <CollapsibleItemComponent\n                header = {this.state.brojDokumenta?'Dokument - '+this.state.brojDokumenta: 'Dokument '}\n                icon = {<Icon>library_books</Icon>}\n                variables = {['brojDokumenta','vrstaDokumenta','datumDokumentaGodina','datumDokumentaMesec','datumDokumentaDan']}\n                states = {this.state}\n              />\n\n              <CollapsibleItemComponent\n              className=\"blue-grey lighten-4\"\n                header={this.state.nazivObjekta?'Objekat - '+this.state.nazivObjekta: 'Objekat '}\n                icon = {<Icon>home</Icon>}\n                variables = {['nazivObjekta','spratnostObjekta','lokacijaObjektaUlica','lokacijaObjektaBroj','lokacijaObjektaGrad','katastarskaParcela','katastarskaOpština','tipObjekta','kategorijaObjekta','klasifikacijonaOznakaObjekta']}\n                states = {this.state}\n              />\n\n              <CollapsibleItemComponent\n                header=\"Priključci\"\n                variables = {['kpPriklucakInfrastruktura','kpPriklucakSaobracajnica','priklucakInfrastrukturaVik','priklucakInfrastrukturaElektro','priklucakInfrastrukturaGrejanje','priklucakInfrastrukturaSaobraćajnice']}\n                states = {this.state}\n              />\n             \n              <CollapsibleItemComponent\n                header={this.state.nazivInvestitora?\"Investitor - \"+this.state.nazivInvestitora:\"Investitor\"}\n                variables = {['nazivInvestitora','lokacijaInvestitoraUlica','lokacijaInvestitoraBroj','lokacijaInvestitoraGrad']}\n                states = {this.state}\n              />\n\n              <CollapsibleItemComponent\n                header={this.state.nazivProjektanta?\"Projektant - \"+this.state.nazivProjektanta:\"Projektant\"}\n                variables = {['nazivProjektanta','lokacijaProjektantaUlica','lokacijaProjektantaBroj','lokacijaProjektantaGrad']}\n                states = {this.state}\n              />\n\n              <CollapsibleItemComponent\n                expanded={false}\n                variables = {['imePrezimeOdgovornogProjektanta','titulaOdgovornogProjektanta','brojLicenceOdgovornogProjektanta']}\n                states = {this.state}\n              />\n            </Collapsible>\n              \n          </div>\n            <div style={{display: 'flex', justifyContent: 'space-around', backgroundColor: 'black', padding: '30px 0'}}>\n                <Link to=\"/Dokument1\" onClick={this.SkrollD}>Dokument 1</Link>\n                <Link to=\"/Dokument2\" onClick={this.SkrollD}>Dokument 2</Link>\n            </div>\n                \n              <Route path={\"/Dokument1\"} render={(props) => \n                <Document1 {...props} \n                    text1={this.state.text1}\n                    saveText={this.saveText}\n                    mesecGodina={this.state.mesecGodina}\n                    brojDokumenta={this.state.brojDokumenta}\n                    nazivInvestitora={this.state.nazivInvestitora}\n                    lokacijaInvestitoraBroj={this.state.lokacijaInvestitoraBroj}\n                    lokacijaInvestitoraUlica={this.state.lokacijaInvestitoraUlica}\n                    lokacijaInvestitoraGrad={this.state.lokacijaInvestitoraGrad}\n                    imePrezimeOdgovornogProjektanta={this.state.imePrezimeOdgovornogProjektanta}\n                    brojLicenceOdgovornogProjektanta={this.state.brojLicenceOdgovornogProjektanta}\n                     />\n              }></Route>\n\n              \n              <Route path={\"/Dokument2\"} render={(props) => \n                <Document2 {...props} \n                    text2={this.state.text2}\n                    saveText={this.saveText}\n                    mesecGodina={this.state.mesecGodina}\n                    brojDokumenta={this.state.brojDokumenta}\n                    nazivInvestitora={this.state.nazivInvestitora}\n                    lokacijaInvestitoraBroj={this.state.lokacijaInvestitoraBroj}\n                    lokacijaInvestitoraUlica={this.state.lokacijaInvestitoraUlica}\n                    lokacijaInvestitoraGrad={this.state.lokacijaInvestitoraGrad}\n                    imePrezimeOdgovornogProjektanta={this.state.imePrezimeOdgovornogProjektanta}\n                    brojLicenceOdgovornogProjektanta={this.state.brojLicenceOdgovornogProjektanta}\n                     />\n              }></Route>\n\n            </div>\n        );\n      }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, } from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}